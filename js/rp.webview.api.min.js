var RPBridge={callbacks:new Array,callbackId:0,eventHandler:undefined,isIOS:function(){var b=navigator.userAgent.toLowerCase();return b.indexOf("iphone")>-1||b.indexOf("ipad")>-1||b.indexOf("ipod")>-1},iOSReturn:function(b){for(var c=0;c<this.callbacks.length;c++){var d=this.callbacks[c];if(d.cid==b.cid){if(b.error!==undefined){if(typeof d.error=="function"){d.error(b.error)}else console.log("RPBridge returned an unhandled error: "+b.error)}else{if(typeof d.success=="function"){d.success(b)}else console.log("sendToDevice callback parameter is not a function")}this.callbacks.splice(c,1);return}}},registerEventCallback:function(b){if(typeof b=="function"){this.eventHandler=b}else console.log("registerEventCallback failed. Argument is not a function.")},receiveFromDevice:function(b){if(this.eventHandler!==undefined){if(typeof this.eventHandler=="function"){this.eventHandler(b)}}},sendToDevice:function(b){if(document.readyState=="loading"||document.readyState=="uninitialized"){if(typeof b.error=="function"){b.error("sendToDevice called before document is ready")}else console.log("sendToDevice called before document is ready");return}b.cid=this.callbackId;if(this.isIOS()){this.callbacks.push(b);var c=document.createElement("IFRAME");c.setAttribute("src","rp-api:"+escape(JSON.stringify(b)));document.documentElement.appendChild(c);c.parentNode.removeChild(c);c=null;this.callbackId++}else{var d=JSON.parse(Android.callAPI(JSON.stringify(b)));if(d.error!==undefined){if(typeof b.error=="function"){b.error(d.error)}else console.log("RPBridge returned an unhandled error: "+d.error);return}if(b.success!==undefined){if(typeof b.success=="function"){b.success(d)}else console.log("RPBridge sendToDevice callback parameter is not a function")}}}}